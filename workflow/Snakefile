## Snakemake Climaso (The CLimate IMpact of AeroSOls: forcing and feedbacks)
##
## Ove Haugvaldstad
##
## MIT license.
##
import os
import glob
import yaml
from scripts.create_lookup_tables import (generate_experiment_lookup_table,
                                    generate_institu_lookup_table,
                                    generate_file_ending_lookup_table)
import socket
from pathlib import Path

configfile: 'config/config.yaml'

hostname = socket.gethostname()
if 'betzy' in hostname:
    ROOT_PATH = '/cluster/shared/ESGF'
else:
    ROOT_PATH = config['root_betzy']
ROOT_PATH_NORESM = config['root_noresm']
CMIP_VER = config['cmip_version']
VARS=config['variables']
EXPERIMENTS=config['experiments']['experiments']
TABLE_IDS=config['table_ids']
DEFAULT_TABLE_ID=config['table_id_default']

CONTROL_EXPS=config['experiments']['control']
ALL_ALLOWED = EXPERIMENTS + CONTROL_EXPS

output_format = {}

# set root outdir path
if config['out_dir']:
    outdir = config['out_dir']
else:
    outdir = 'results/'

if config['output_format']=='aerocom_column':
    output_format['single_variable'] = outdir+'{model}_{experiment}/renamed/aerocom3_{model}_{experiment}_{variable}_Column_{freq}_monthly.nc'
    print(output_format)
    valid_frequencies = 'daily|annual|2010|monthly'
else:
    output_format['single_variable'] = outdir+'{experiment}/{variable}/{variable}_{experiment}_{model}_{freq}.nc'
    valid_frequencies = 'Aday|Amon|clim|Ayear'

if config['no_intermediate_files']:
    output_format = {key:temp(item) for key, item in output_format.items()}

wildcard_constraints:
    freq=valid_frequencies

include: 'rules/compute_ERF.smk'
include: 'rules/utils.smk'
include: 'rules/calc_feedback.smk'
include: 'rules/diagnose_cloud_changes.smk'
include: 'rules/plotAerChemMIP.smk'
include: 'rules/dust_historical.smk'
include: 'rules/dust_aerosol_interannual_variability.smk'

include: 'rules/calc_historical_forcing.smk'


rule all:
    input:
        expand(outdir+'figs/AerChemMIP/ERFs/{vName}_piClim-2xdust_AerChemMIP.png',
                        vName=['ERFtsw','ERFtlw','ERFtcs','ERFt']),
        expand(outdir+'figs/AerChemMIP/ERFs/{vName}_piClim-2xdust_globalaverage_AerChemMIP.png',
                        vName=['ERFtsw','ERFtlw','ERFtcs','ERFt']),
        expand(outdir+'figs/AerChemMIP/ERFs/{vName}_piClim-2xdust_AerChemMIP.png',
                        vName=['SWDirectEff','LWDirectEff', 'SWCloudEff','LWCloudEff','LWDirectEff_cs','SWDirectEff_cs','CloudEff','DirectEff']),
        # outdir+'figs/AerChemMIP/delta_2xdust/cdnc_piClim-2xdust_AerChemMIP.png'




rule clim_od550dust_aerocom_CMIP6:
    input:
        expand(outdir+'{model}_{experiment}/renamed/aerocom3_{model}_{experiment}_{variable}_Column_2010_monthly.nc',
                    variable='od550dust',experiment=['piClim-control','piClim-2xdust'],
                    model=['EC-Earth3-AerChem', 'GISS-E2-1-G', 'IPSL-CM6A-LR-INCA', 
                        'UKESM1-0-LL', 'GFDL-ESM4', 'MPI-ESM-1-2-HAM',
                        'CNRM-ESM2-1', 'NorESM2-LM'])

rule clim_od550aer_aerocom_CMIP6:
    input:
        expand(outdir+'{model}_{experiment}/renamed/aerocom3_{model}_{experiment}_{variable}_Column_2010_monthly.nc',
                    variable='od550aer',experiment=['piClim-control','piClim-2xdust'],
                    model=['GISS-E2-1-G',  
                         'GFDL-ESM4',
                        'CNRM-ESM2-1'])          
