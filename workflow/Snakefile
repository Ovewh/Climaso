## Snakemake Climaso (The CLimate IMpact of AeroSOls: forcing and feedbacks)
##
## Ove Haugvaldstad
##
## MIT license.
##
import os
import glob
import yaml
import socket
from pathlib import Path

configfile: 'config/config.yaml'

hostname = socket.gethostname()
if config['lustre']:
    ROOT_PATH = config['root_lustre']
elif config.get('root_nird'):
    ROOT_PATH = config['root_nird']

else:
    ROOT_PATH = config['root_path']
ROOT_PATH_NORESM = config['root_noresm']
CMIP_VER = config['cmip_version']
VARS=config['variables']
EXPERIMENTS=config['experiments']['experiments']
TABLE_IDS=config['table_ids']
DEFAULT_TABLE_ID=config['table_id_default']

CONTROL_EXPS=config['experiments']['control']
ALL_ALLOWED = EXPERIMENTS + CONTROL_EXPS

output_format = {}

if config.get('model_configfile'):
    for model, model_conf in config['model_configfile'].items():
        with open(model_conf) as f:
            model_config = yaml.load(f, Loader=yaml.FullLoader)
        config['diag_vars']['model'] = model_config.copy()



# set root outdir path
if config['out_dir']:
    outdir = config['out_dir']
else:
    outdir = 'results/'

if config['output_format']=='aerocom_column':
    output_format['single_variable'] = outdir+'{model}_{experiment}/renamed/aerocom3_{model}_{experiment}_{variable}_Column_{freq}_monthly.nc'
    print(output_format)
    valid_frequencies = 'daily|annual|2010|monthly'
else:
    output_format['single_variable'] = outdir+'{experiment}/{variable}/{variable}_{experiment}_{model}_{freq}.nc'
    valid_frequencies = 'Aday|Amon|clim|Ayear'

if config['no_intermediate_files']:
    output_format = {key:temp(item) for key, item in output_format.items()}

wildcard_constraints:
    freq=valid_frequencies

include: 'rules/compute_ERF.smk'
include: 'rules/utils.smk'
include: 'rules/diagnose_cloud_changes.smk'
include: 'rules/plotAerChemMIP.smk'
include: 'rules/dust_analysis.smk'
include: 'rules/make_table.smk'


rule all:
    input:
        expand(outdir+'figs/AerChemMIP/ERFs/{vName}_piClim-2xdust_AerChemMIP.png',
                        vName=['ERFtsw','ERFtlw','ERFtcs','ERFt']),
        expand(outdir+'figs/AerChemMIP/ERFs/{vName}_piClim-2xdust_globalaverage_AerChemMIP.png',
                        vName=['ERFtsw','ERFtlw','ERFtcs','ERFt']),
        expand(outdir+'figs/AerChemMIP/ERFs/{vName}_piClim-2xdust_AerChemMIP.png',
                        vName=['SWDirectEff','LWDirectEff', 'SWCloudEff','LWCloudEff','LWDirectEff_cs','SWDirectEff_cs','CloudEff','DirectEff']),
        # outdir+'figs/AerChemMIP/delta_2xdust/cdnc_piClim-2xdust_AerChemMIP.png'




